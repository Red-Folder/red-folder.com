@model RedFolder.ViewModels.ContactForm

<rfc-inline-style css-file="Shared/_ContactForm.css"></rfc-inline-style>

<div class="contact-form">
    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @ViewBag.ErrorMessage
        </div>
    }

    @using (Html.BeginForm("contact", "home", FormMethod.Post, new { id = "contact-form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(x => x.Name)
            @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.EmailAddress)
            @Html.TextBoxFor(x => x.EmailAddress, new { @class = "form-control", @type = "email" })
            @Html.ValidationMessageFor(x => x.EmailAddress, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.HowCanIHelp)
            @Html.TextAreaFor(x => x.HowCanIHelp, new { @class = "form-control", @rows = 10 })
            @Html.ValidationMessageFor(x => x.HowCanIHelp, "", new { @class = "text-danger" })
        </div>

        @Html.HiddenFor(x => x.RecaptureToken)

        <button class="btn btn-primary g-recaptcha"
                data-sitekey="6LdDJLUZAAAAAP1GIa8uj8kJ2JL4bw3maydYH_j7"
                data-callback='onSubmit'
                data-action='submit'>
            Submit
        </button>
    }
</div>

<script src="https://www.google.com/recaptcha/api.js"></script>
<script>
    function onSubmit(token) {
        document.getElementById('RecaptureToken').value = token;
        document.getElementById("contact-form").submit();
    }
</script>

