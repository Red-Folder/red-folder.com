@model Red_Folder.com.ViewModels.Activity.ActivityLayout<Red_Folder.com.Models.Activity.SkillsActivity>

<div id="@Model.LayoutId">
    <h2>The skills I've used ...</h2>
    <div id="skills-cloud">
    </div>
</div>


<script>
    window.clouds = window.clouds || {};

    var skillList = [
    @{
        var maxDuration = Model.Activity.Skills.Max(x => x.TotalDuration);
        var sizeIncrement = ((float)90) / maxDuration;
        foreach (var skill in Model.Activity.Skills)
        {
            @:{ text: '@skill.Name', size: @(10 + (90 * ((float)skill.TotalDuration/ maxDuration))) },
        }
    }
    ];

    function drawCloud(range_max, width, height) {
        var words = JSON.parse(JSON.stringify(skillList));

        var maxSize = d3.max(words, function (d) { return d.size; });
        var minSize = d3.min(words, function (d) { return d.size; });

        var fontScale = d3.scale.linear()
            .domain([minSize, maxSize])
            .range([20, range_max]);

        layout = d3.layout
            .cloud()
            .size([width, height])
            .words(words)
            .padding(5)
            .rotate(function () { return 0; })
            .font("Impact")
            .fontSize(function (d) { return fontScale(d.size) })
            .on("end", function (output) {
                // Based on https://github.com/jasondavies/d3-cloud/issues/36#issuecomment-148908032
                if (words.length !== output.length) {   // compare between input ant output
                    drawCloud(range_max - 5, width, height);           // call the function recursively
                    return undefined;
                }
                else { draw(output, width, height); }                  // when all words are included, start rendering
            })
            .start();
    }

    var fill = d3.scale.category20();

    function draw(words, width, height) {
        d3.select("#skills-cloud")
            .append("svg")
                .attr("width", width)
                .attr("height", height)
            .append("g")
                .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")")
            .selectAll("text")
                .data(words)
            .enter().append("text")
                .style("font-size", function (d) { return d.size + "px"; })
                .style("font-family", "Impact")
                .style("fill", function (d, i) { return fill(i); })
                .attr("text-anchor", "middle")
                .attr("transform", function (d) {
                    return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
                })
                .text(function (d) { return d.text; });
    };

    drawCloud(100, 500, 400);
</script>
