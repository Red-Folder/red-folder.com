@model RedFolder.ViewModels.BlogCollection

@{
    ViewBag.Title = "Blog";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.BodyCssClass = "new2-css";
    ViewBag.DropContainerFluid = true;
}

<div class="rfc-header home-page">
    <h1>Blog</h1>
</div>


<div class="reverse">
    <div class="filter-switch selectable">
        <a onclick="toggle(null, '.filter-chooser, .filter-chevron');">
            <strong>Filter: </strong>@(Model.FilterBy == null || Model.FilterBy.Length == 0 ? "None" : Model.FilterBy) &nbsp; <i class="filter-chevron fa fa-chevron-down"></i><i class="filter-chevron fa fa-chevron-up hidden"></i>
        </a>
    </div>
    <div class="filter-chooser hidden">
        <ul>
            @if (Model.KeyWords != null && Model.KeyWords.Count() > 0)
            {
                @foreach (var keyWord in Model.KeyWords)
                {
                    var filteringBy = (Model.FilterBy != null && Model.FilterBy.Split(',').Any(x => x.Trim() == keyWord.Key));
                    <li class="selectable keyword @(filteringBy ? "filter-by": "")" onclick="pageConfig.toggleFeature('@keyWord.Key')">
                        @keyWord.Key (@keyWord.Value)&nbsp;
                        @if (filteringBy)
                        {
                            <i class="fa fa-check hide-on-hover"></i>
                            <i class="fa fa-times show-on-hover"></i>
                        }
                        else
                        {
                            <i class="fa fa-check show-on-hover"></i>
                        }
                    </li>
                }
            }
        </ul>
    </div>
</div>

<rfc-pager page-no="@Model.PageNo"
           pages="@Model.Pages"
           on-first-page="pageConfig.firstPage()"
           on-previous-page="pageConfig.previousPage()"
           on-next-page="pageConfig.nextPage()"
           on-last-page="pageConfig.lastPage()">
</rfc-pager>

<div class="container-fluid">
    <div class="blog-tiles row">
        @foreach (var blog in Model.BlogsForCurrentPage)
                        {
            @(await Html.PartialAsync("_BlogTile", blog))
        }
    </div>
</div>

<rfc-pager page-no="@Model.PageNo"
           pages="@Model.Pages"
           on-first-page="pageConfig.firstPage()"
           on-previous-page="pageConfig.previousPage()"
           on-next-page="pageConfig.nextPage()"
           on-last-page="pageConfig.lastPage()">
</rfc-pager>

@section Scripts
                        {

    <script type="text/javascript">
        var listConfig = function() {
                                this.pageNo = @Model.PageNo;
                                this.blogsPerPage = @Model.BlogsPerPage;
                                this.filterBy = [
                                    @if (Model.FilterBy != null && Model.FilterBy.Split(',').Count() > 0)
                {
                                    @foreach (var item in Model.FilterBy.Split(','))
                    {
                        @:'@item',
                    }
                }
            ];
            this.orderBy = '@Model.OrderedBy';
            this.pages = @Model.Pages;

            this.submit = function() {
                var newUrl = '/blog' +
                            '?pageNo=' + this.pageNo +
                            '&blogsPerPage=' + this.blogsPerPage +
                            '&filterBy=' + this.filterBy.join() +
                            '&orderBy=' + this.orderBy;
                document.location.href = newUrl;
            };

            this.toggleFeature = function(feature) {
                var index = this.filterBy.indexOf(feature);
                if (index < 0) {
                    this.filterBy.push(feature);
                } else {
                    this.filterBy.splice(index, 1);
                }
                this.submit();
            };

            this.firstPage = function() {
                this.pageNo = 1;
                this.submit();
            }

            this.previousPage = function() {
                if (this.pageNo > 1) {
                    this.pageNo--;
                    this.submit();
                }
            }

            this.nextPage = function() {
                if (this.pageNo < this.pages) {
                    this.pageNo++;
                    this.submit();
                }
            }

            this.lastPage = function() {
                this.pageNo = this.pages;
                this.submit();
            }

        };

        var pageConfig = new listConfig();
 
    </script>
}